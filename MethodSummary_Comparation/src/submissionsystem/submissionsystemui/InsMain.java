package submissionsystem.submissionsystemui;

import submissionsystem.*;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abdullah Talayhan
 */
public class InsMain extends javax.swing.JFrame {

    Client client;
    ArrayList<Assignment> allAssignments;
    ArrayList<Assignment> allSubmissionsInAsgn;
    FileInputStream fis;
    FileOutputStream fos;
    /**
     * Creates new form InsMain
     */
    public InsMain(Client pclient) {
        client = pclient;
        
        initComponents();
        init();
        downAsgnBtn.setVisible(false);
        asgnNameLabel.setVisible(false);
        asgnDueLabel.setVisible(false);
        //initTabs();
        asgnCombo.addActionListener (new ActionListener () {
            public void actionPerformed(ActionEvent e) {
                DefaultTableModel asgnTableModel;
                //studentTable.setModel(panelTableModel);
                client.sendUTFDataToServer("GET_SUBMISSIONS");
                client.sendUTFDataToServer(courseTitleLabel2.getText());
                client.sendUTFDataToServer((String) asgnCombo.getSelectedItem());
                
                asgnTableModel = (DefaultTableModel) client.getObjectFromServer();
                allSubmissionsInAsgn = (ArrayList<Assignment>) client.getObjectFromServer();
                subTable.setModel(asgnTableModel);
                asgnNameLabel.setVisible(true);
                asgnDueLabel.setVisible(true);
                asgnNameLabel.setText("Assignment: " + (String)asgnCombo.getSelectedItem());
                
                asgnDueLabel.setText("Due Date: " + allAssignments.get(asgnCombo.getSelectedIndex()).getDuedate());
                downAsgnBtn.setVisible(true);
            }
        });
        initSubTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        courseList = new javax.swing.JList();
        addCourseButton = new javax.swing.JButton();
        mainTabs = new javax.swing.JTabbedPane();
        coursePanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        courseTitleLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        pubAssignButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        courseDescLabel = new javax.swing.JLabel();
        assignmentPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        courseTitleLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        subTable = new javax.swing.JTable();
        courseDescLabel1 = new javax.swing.JLabel();
        asgnCombo = new javax.swing.JComboBox();
        downSubBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        gradeField = new javax.swing.JTextField();
        sendGradeBtn = new javax.swing.JButton();
        asgnNameLabel = new javax.swing.JLabel();
        asgnDueLabel = new javax.swing.JLabel();
        downAsgnBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Instructor Control Panel");

        jLabel1.setText("My Courses: ");

        courseList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "CS102-02", "CS223-01", "CS319-02" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(courseList);

        addCourseButton.setText("Add Course");
        addCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseButtonActionPerformed(evt);
            }
        });

        coursePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("Course Name: ");

        courseTitleLabel.setText("CS102-02");

        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "29866079", "lab01", "04.10.2016",  new Boolean(false),  new Boolean(false)},
                {"2", "61618675", "lab02", "11.10.2016",  new Boolean(false),  new Boolean(false)},
                {"3", "59022017", "lab03", "18.10.2016", null,  new Boolean(true)},
                {"4", "44546138", "lab04", "25.10.2016",  new Boolean(true),  new Boolean(true)},
                {"5", "60437855", "lab05", "02.11.2016", null,  new Boolean(true)},
                {"6", "67873316", "lab06", "16.11.2016", null,  new Boolean(true)},
                {"7", "27908627", "lab07", "23.11.2016",  new Boolean(true), null},
                {"8", "17570421", "lab08", "30.11.2016", null,  new Boolean(true)},
                {"9", "64320744", "lab09", "06.11.2016", null,  new Boolean(true)}
            },
            new String [] {
                "No â–²", "ID", "Assignment", "Due Date", "Auto Grading", "Moss Check"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(studentTable);

        pubAssignButton.setText("Send Assignment");
        pubAssignButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pubAssignButtonActionPerformed(evt);
            }
        });

        jButton3.setText("Send E-mail");

        courseDescLabel.setText("courseDesLabel");

        javax.swing.GroupLayout coursePanelLayout = new javax.swing.GroupLayout(coursePanel);
        coursePanel.setLayout(coursePanelLayout);
        coursePanelLayout.setHorizontalGroup(
            coursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(coursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, coursePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(pubAssignButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(coursePanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(30, 30, 30)
                        .addComponent(courseTitleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(courseDescLabel)
                        .addGap(0, 394, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        coursePanelLayout.setVerticalGroup(
            coursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(coursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(coursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(courseTitleLabel)
                    .addComponent(courseDescLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(coursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pubAssignButton)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        mainTabs.addTab("Courses", coursePanel);

        assignmentPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setText("Course Name: ");

        courseTitleLabel2.setText("CS102-02");

        subTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "29866079", "lab01", "04.10.2016",  new Boolean(false),  new Boolean(false)},
                {"2", "61618675", "lab02", "11.10.2016",  new Boolean(false),  new Boolean(false)},
                {"3", "59022017", "lab03", "18.10.2016", null,  new Boolean(true)},
                {"4", "44546138", "lab04", "25.10.2016",  new Boolean(true),  new Boolean(true)},
                {"5", "60437855", "lab05", "02.11.2016", null,  new Boolean(true)},
                {"6", "67873316", "lab06", "16.11.2016", null,  new Boolean(true)},
                {"7", "27908627", "lab07", "23.11.2016",  new Boolean(true), null},
                {"8", "17570421", "lab08", "30.11.2016", null,  new Boolean(true)},
                {"9", "64320744", "lab09", "06.11.2016", null,  new Boolean(true)}
            },
            new String [] {
                "No â–²", "ID", "Assignment", "Due Date", "Auto Grading", "Moss Check"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(subTable);

        courseDescLabel1.setText("courseDesLabel");

        asgnCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        asgnCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asgnComboActionPerformed(evt);
            }
        });

        downSubBtn.setText("Download Submission");
        downSubBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downSubBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("Grade: ");

        sendGradeBtn.setText("Send Grade");
        sendGradeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendGradeBtnActionPerformed(evt);
            }
        });

        asgnNameLabel.setText("Assignment: ");

        asgnDueLabel.setText("Due Date:");

        downAsgnBtn.setText("Download Assignment");
        downAsgnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downAsgnBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout assignmentPanelLayout = new javax.swing.GroupLayout(assignmentPanel);
        assignmentPanel.setLayout(assignmentPanelLayout);
        assignmentPanelLayout.setHorizontalGroup(
            assignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(assignmentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(assignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, assignmentPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(30, 30, 30)
                        .addComponent(courseTitleLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(courseDescLabel1)
                        .addGap(0, 394, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, assignmentPanelLayout.createSequentialGroup()
                        .addGroup(assignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(asgnNameLabel)
                            .addComponent(asgnDueLabel)
                            .addComponent(asgnCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(downAsgnBtn))
                        .addGap(21, 21, 21)
                        .addGroup(assignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(assignmentPanelLayout.createSequentialGroup()
                                .addComponent(downSubBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gradeField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sendGradeBtn))
                            .addComponent(jScrollPane3))))
                .addContainerGap())
        );
        assignmentPanelLayout.setVerticalGroup(
            assignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(assignmentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(assignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(courseTitleLabel2)
                    .addComponent(courseDescLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(assignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(assignmentPanelLayout.createSequentialGroup()
                        .addComponent(asgnCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(asgnNameLabel)
                        .addGap(18, 18, 18)
                        .addComponent(asgnDueLabel)
                        .addGap(18, 18, 18)
                        .addComponent(downAsgnBtn)
                        .addGap(0, 114, Short.MAX_VALUE))
                    .addGroup(assignmentPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(assignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sendGradeBtn)
                            .addComponent(gradeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(downSubBtn))))
                .addContainerGap())
        );

        mainTabs.addTab("Assignments", assignmentPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addCourseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(mainTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mainTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(3, 3, 3)
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addCourseButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseButtonActionPerformed
        // TODO add your handling code here:
        CourseReg createCourseFrame = new CourseReg(client, this);
        createCourseFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        createCourseFrame.setLocationRelativeTo(this);
        createCourseFrame.setVisible(true);
    }//GEN-LAST:event_addCourseButtonActionPerformed

    private void pubAssignButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pubAssignButtonActionPerformed
        // TODO add your handling code here:
        SendAssignment sendFrame = new SendAssignment(client, courseTitleLabel.getText());
        sendFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        sendFrame.setLocationRelativeTo(this);
        sendFrame.setVisible(true);
    }//GEN-LAST:event_pubAssignButtonActionPerformed

    private void asgnComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asgnComboActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_asgnComboActionPerformed

    private void sendGradeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendGradeBtnActionPerformed
        // TODO add your handling code here:
        String email = subTable.getValueAt(subTable.getSelectedRow(), 1).toString();
        int grade = Integer.parseInt(gradeField.getText());
        
        client.sendUTFDataToServer("SEND_GRADE");
        client.sendUTFDataToServer(email);
        client.sendIntDataToServer(grade);
        
    }//GEN-LAST:event_sendGradeBtnActionPerformed
    
    private void downloadFrom(Assignment toDown ) {
        client.sendUTFDataToServer("DOWNLOAD_SUBS");
        client.sendObjectToServer(toDown);
        
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.showOpenDialog(this);
        File downFolder = chooser.getSelectedFile();
        
        
        byte[] data = (byte[]) client.getObjectFromServer();
        try {
            fos = new FileOutputStream(downFolder.getAbsolutePath() + "/" + toDown.getName() + ".zip");
            fos.write(data);
            fos.close();
        } catch (IOException ex) {
            Logger.getLogger(StudentMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    
    private void downSubBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downSubBtnActionPerformed
        // TODO add your handling code here:
        int index = subTable.getSelectedRow();
        Assignment toDown = allSubmissionsInAsgn.get(index);
        downloadFrom(toDown);
        
        
    }//GEN-LAST:event_downSubBtnActionPerformed

    private void downAsgnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downAsgnBtnActionPerformed
        // TODO add your handling code here:
        int index = asgnCombo.getSelectedIndex();
        
        Assignment asgnToDown = allAssignments.get(index);
        downloadFrom(asgnToDown);
    }//GEN-LAST:event_downAsgnBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void initTabs() {
        mainTabs.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent e) {
                //TODO
                //System.out.println("Tab: " + tabbedPane.getSelectedIndex());
                // Prints the string 3 times if there are 3 tabs etc
            }
        });
    }
    public void init() {
        
        courseList.setModel(new DefaultListModel());
        client.sendUTFDataToServer("GET_COURSES");
        courseArrList = (ArrayList)client.getObjectFromServer();
        model = (DefaultListModel) courseList.getModel();
        model.clear();
        for(String s : courseArrList) {
            model.addElement(s);
        }
        if(courseArrList.size() == 0) {
            model.addElement("No Course");
        }
        courseList.setModel(model);
        courseList.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent evt) {
                
                
                JList list = (JList) evt.getSource();
                int index = list.getSelectedIndex();
                if(index != -1) {
                constructCoursePanel(index);
                constuctAssignmentPanel(index);
                }
            }
        });
        
        downSubBtn.setEnabled(false);
        gradeField.setEditable(false);
        sendGradeBtn.setEnabled(false); 
    }
    
    public void updateCourseList() {
        courseList.setModel(new DefaultListModel());
        client.sendUTFDataToServer("GET_COURSES");
        courseArrList = (ArrayList)client.getObjectFromServer();
        model = (DefaultListModel) courseList.getModel();
        //model.clear();
        for(String s : courseArrList) {
            model.addElement(s);
        }
        courseList.setModel(model);
    }
    public void constructCoursePanel(int index) {
        String course = (String) model.getElementAt(index);
        courseTitleLabel2.setText(course);
        
        client.sendUTFDataToServer("CONSTRUCT_STUDENT_PANEL");
        client.sendUTFDataToServer(course);
        
        DefaultTableModel panelTableModel = (DefaultTableModel)client.getObjectFromServer();
        studentTable.setModel(panelTableModel);
    }
    
    public void constuctAssignmentPanel(int index) {
        String course = (String) model.getElementAt(index);
        courseTitleLabel.setText(course);
        System.out.println("inside");
        client.sendUTFDataToServer("CONSTRUCT_ASSIGNMENT_PANEL");
        client.sendUTFDataToServer(course);
        allAssignments = (ArrayList<Assignment>) client.getObjectFromServer();
        //System.out.println(allAssignments);
        ArrayList<String> allAsgnNames = new ArrayList<String>();
        
        for(int i = 0; i < allAssignments.size();i++) {
            allAsgnNames.add(allAssignments.get(i).getName());
        }
            
        asgnCombo.setModel( new DefaultComboBoxModel(allAsgnNames.toArray()));
        
        //DefaultTableModel panelTableModel = (DefaultTableModel)client.getObjectFromServer();
        //studentTable.setModel(panelTableModel);
    }
    
    public void initSubTable() {
        
        subTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
        @Override
        public void valueChanged(ListSelectionEvent event) {
            if (subTable.getSelectedRow() > -1) {
                // print first column value from selected row
                System.out.println(subTable.getValueAt(subTable.getSelectedRow(), 0).toString());
                downSubBtn.setEnabled(true);
                gradeField.setEditable(true);
                sendGradeBtn.setEnabled(true);
            }
            else {
               downSubBtn.setEnabled(false);
               gradeField.setEditable(false);
               sendGradeBtn.setEnabled(false); 
            }
        }
        });
    }
    
    // other vairables
    public ArrayList<String> courseArrList;
    public DefaultListModel model;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCourseButton;
    private javax.swing.JComboBox asgnCombo;
    private javax.swing.JLabel asgnDueLabel;
    private javax.swing.JLabel asgnNameLabel;
    private javax.swing.JPanel assignmentPanel;
    private javax.swing.JLabel courseDescLabel;
    private javax.swing.JLabel courseDescLabel1;
    private javax.swing.JList courseList;
    private javax.swing.JPanel coursePanel;
    private javax.swing.JLabel courseTitleLabel;
    private javax.swing.JLabel courseTitleLabel2;
    private javax.swing.JButton downAsgnBtn;
    private javax.swing.JButton downSubBtn;
    private javax.swing.JTextField gradeField;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane mainTabs;
    private javax.swing.JButton pubAssignButton;
    private javax.swing.JButton sendGradeBtn;
    private javax.swing.JTable studentTable;
    private javax.swing.JTable subTable;
    // End of variables declaration//GEN-END:variables

   
}
