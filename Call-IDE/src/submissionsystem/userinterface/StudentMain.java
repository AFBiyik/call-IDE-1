package submissionsystem.userinterface;

import submissionsystem.*;

import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Date;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import net.lingala.zip4j.core.ZipFile;
import net.lingala.zip4j.exception.ZipException;
import net.lingala.zip4j.model.ZipParameters;
import net.lingala.zip4j.util.Zip4jConstants;

/**
 *
 * @author Abdullah Talayhan
 */
public class StudentMain extends javax.swing.JFrame {
    
    Client client;
    String courseCode;
    int currentAsgnIndex;
    File subPathToSend;
    String downloadPath;
    Assignment toDown;
    ArrayList<Assignment> curAssignments;
    ArrayList<Assignment> pastAssignments;
    ArrayList<Assignment> allSubmissions;
    ArrayList<String> curAssignmentNames;
    ArrayList<String> pastAssignmentNames;
    public ArrayList<String> courseArrList;
    DefaultListModel curModel;
    DefaultListModel pastModel;
    FileInputStream fis;
    FileOutputStream fos;
    
    
    /**
     * Creates new form InsMain
     */
    public StudentMain(Client pclient) {
        client = pclient;
        
        initComponents();
        curList.setModel(new DefaultListModel());
        pastList.setModel(new DefaultListModel());
        
        
        this.setSize(new Dimension(500, this.getHeight())); //-
        curPanel.setVisible(false);
        pastPanel.setVisible(false);
        
        initModels();
        initCourses();
        initCurAssignments();
        initPastAssignments();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        pastList = new javax.swing.JList();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        courseCombo = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        curList = new javax.swing.JList();
        jLabel10 = new javax.swing.JLabel();
        enrollBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        pastPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        pastAsName = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        pastAsDueDate = new javax.swing.JLabel();
        downSubBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pastAsSubDate = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        downAsgnFromSubBtn = new javax.swing.JButton();
        gradeLabel = new javax.swing.JLabel();
        curPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        curAsName = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        curAsDate = new javax.swing.JLabel();
        downAsgnBtn = new javax.swing.JButton();
        chooseSubPathBtn = new javax.swing.JButton();
        subPathField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        submitBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("My Assignments");

        pastList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Lab01", "Lab02", "Lab03", "Lab04", " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(pastList);

        jLabel7.setText("Current Assignments");

        jLabel8.setText("Select Course: ");

        courseCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CS101-03", "CS223-01", "CS319-16" }));
        courseCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseComboActionPerformed(evt);
            }
        });

        curList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Lab05" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(curList);

        jLabel10.setText("Past Assignments");

        enrollBtn.setText("Enroll");
        enrollBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enrollBtnActionPerformed(evt);
            }
        });

        pastPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pastPanel.setPreferredSize(new java.awt.Dimension(327, 163));

        jLabel2.setText("Assignment: ");

        pastAsName.setText("Lab01");

        jLabel5.setText("Due Date: ");

        pastAsDueDate.setText("21.03.2017");

        downSubBtn.setText("Downlaod Submission");
        downSubBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downSubBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("State: ");

        pastAsSubDate.setText("Submitted(21.03.2017)");

        jLabel4.setText("Grade: ");

        downAsgnFromSubBtn.setText("Downlaod Assignment");
        downAsgnFromSubBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downAsgnFromSubBtnActionPerformed(evt);
            }
        });

        gradeLabel.setText("100");
        gradeLabel.setToolTipText("");

        javax.swing.GroupLayout pastPanelLayout = new javax.swing.GroupLayout(pastPanel);
        pastPanel.setLayout(pastPanelLayout);
        pastPanelLayout.setHorizontalGroup(
            pastPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pastPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pastPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pastPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(gradeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(downSubBtn))
                    .addGroup(pastPanelLayout.createSequentialGroup()
                        .addGroup(pastPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(pastPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pastAsName)
                            .addComponent(pastAsDueDate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(downAsgnFromSubBtn))
                    .addGroup(pastPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(21, 21, 21)
                        .addComponent(pastAsSubDate)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pastPanelLayout.setVerticalGroup(
            pastPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pastPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pastPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pastPanelLayout.createSequentialGroup()
                        .addGroup(pastPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(pastAsName))
                        .addGap(5, 5, 5)
                        .addGroup(pastPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(pastAsDueDate)))
                    .addComponent(downAsgnFromSubBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(pastPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pastAsSubDate, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(pastPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(gradeLabel)
                    .addComponent(downSubBtn))
                .addGap(15, 15, 15))
        );

        jPanel1.add(pastPanel);

        curPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        curPanel.setPreferredSize(new java.awt.Dimension(327, 163));

        jLabel11.setText("Assignment: ");

        curAsName.setText("Lab01");

        jLabel13.setText("Due Date: ");

        curAsDate.setText("21.03.2017");

        downAsgnBtn.setText("Downlaod Assignment");
        downAsgnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downAsgnBtnActionPerformed(evt);
            }
        });

        chooseSubPathBtn.setText("Choose File");
        chooseSubPathBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseSubPathBtnActionPerformed(evt);
            }
        });

        jLabel15.setText("State: ");

        jLabel16.setText("Not Submitted / Submitted");

        submitBtn.setText("Submit Assignment");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout curPanelLayout = new javax.swing.GroupLayout(curPanel);
        curPanel.setLayout(curPanelLayout);
        curPanelLayout.setHorizontalGroup(
            curPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(curPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(curPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(curPanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(curPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(curPanelLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(curAsDate))
                            .addGroup(curPanelLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(curAsName)
                                .addGap(28, 28, 28)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(downAsgnBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, curPanelLayout.createSequentialGroup()
                        .addGroup(curPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(curPanelLayout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                                .addComponent(jLabel16))
                            .addComponent(subPathField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 14, Short.MAX_VALUE)
                        .addGroup(curPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(submitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chooseSubPathBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        curPanelLayout.setVerticalGroup(
            curPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(curPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(curPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(curPanelLayout.createSequentialGroup()
                        .addGroup(curPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(curAsName))
                        .addGap(5, 5, 5)
                        .addGroup(curPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(curAsDate)))
                    .addComponent(downAsgnBtn))
                .addGap(25, 25, 25)
                .addGroup(curPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(curPanelLayout.createSequentialGroup()
                        .addGroup(curPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chooseSubPathBtn)
                            .addComponent(subPathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(submitBtn))
                    .addGroup(curPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(jLabel15)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel1.add(curPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(courseCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enrollBtn))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(courseCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enrollBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void enrollBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enrollBtnActionPerformed
        // TODO add your handling code here:
        EnrollCourse enrollFrame = new EnrollCourse(client);
        enrollFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        enrollFrame.setLocationRelativeTo(this);
        enrollFrame.setVisible(true);
    }//GEN-LAST:event_enrollBtnActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        // TODO add your handling code here:
        Assignment asgn = curAssignments.get(currentAsgnIndex);
        //subPathToSend = subPathField.getText();
        
        long length = subPathToSend.length();
        
        if(length > Integer.MAX_VALUE) {
            JOptionPane.showMessageDialog(this, "Assignment file is more than 2 GB", "Call-IDE Error!", JOptionPane.ERROR);

        }
        else {
            client.sendUTFDataToServer("SEND_SUBMISSION");
            long millis=System.currentTimeMillis();
            Assignment subToSend = new Assignment(asgn.getName(), asgn.getAuthor(), asgn.getDuedate(), new Date(millis), subPathToSend.getAbsolutePath(), -1);
            client.sendObjectToServer(subToSend);
            client.sendUTFDataToServer((String)courseCombo.getSelectedItem());
            try {
                ZipParameters zipParams = new ZipParameters();
                zipParams.setCompressionMethod(Zip4jConstants.COMP_DEFLATE);
                zipParams.setCompressionLevel(Zip4jConstants.DEFLATE_LEVEL_NORMAL);
                
                String compressedPath = subPathToSend.getParent() + "/" + subToSend.getName()  + ".zip";
                System.out.println(compressedPath);
                ZipFile compressedFile;
            
                compressedFile = new ZipFile(compressedPath);
            
                
                compressedFile.addFolder(subPathToSend, zipParams);
                File toSendZip = new File(compressedPath);
                
                fis = new FileInputStream(toSendZip);
                byte[] data = new byte[(int) toSendZip.length()];
                
                fis.read(data);
                System.out.println(java.util.Arrays.toString(data));
                fis.close();
               
                client.sendObjectToServer(data);
            } catch (ZipException ex) {
                Logger.getLogger(StudentMain.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(StudentMain.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(StudentMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_submitBtnActionPerformed

    private void chooseSubPathBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseSubPathBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser f = new JFileChooser();
        f.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        f.showOpenDialog(this);
        
        subPathToSend = f.getSelectedFile();
        subPathField.setText(subPathToSend.getAbsolutePath());
        
    }//GEN-LAST:event_chooseSubPathBtnActionPerformed

    private void downAsgnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downAsgnBtnActionPerformed
        // TODO add your handling code here:
        toDown = curAssignments.get(currentAsgnIndex);
        downloadFrom(toDown);
        
    }//GEN-LAST:event_downAsgnBtnActionPerformed

    private void downAsgnFromSubBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downAsgnFromSubBtnActionPerformed
        // TODO add your handling code here:
        toDown = pastAssignments.get(currentAsgnIndex);
        downloadFrom(toDown);
    }//GEN-LAST:event_downAsgnFromSubBtnActionPerformed
    
    private void downloadFrom(Assignment toDown ) {
        client.sendUTFDataToServer("DOWNLOAD_ASGN");
        client.sendObjectToServer(toDown);
        
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.showOpenDialog(this);
        File downFolder = chooser.getSelectedFile();
        
        
        byte[] data = (byte[]) client.getObjectFromServer();
        try {
            fos = new FileOutputStream(downFolder.getAbsolutePath() + "/" + toDown.getName() + ".zip");
            fos.write(data);
            fos.close();
        } catch (IOException ex) {
            Logger.getLogger(StudentMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    private void courseComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseComboActionPerformed
        // TODO add your handling code here:
        initCurAssignments();
        initPastAssignments();
    }//GEN-LAST:event_courseComboActionPerformed

    private void downSubBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downSubBtnActionPerformed
        // TODO add your handling code here:
        toDown = allSubmissions.get(currentAsgnIndex);
        downloadFrom(toDown);
    }//GEN-LAST:event_downSubBtnActionPerformed
    
    public void initModels() {
        curModel = (DefaultListModel) curList.getModel();
        pastModel = (DefaultListModel) pastList.getModel();
        //curModel = new DefaultListModel();
        //pastModel = new DefaultListModel();
        curModel.clear();
        pastModel.clear();
        
          MouseListener curMouseListener = new MouseAdapter() {
          public void mouseClicked(MouseEvent mouseEvent) {
            JList theList = (JList) mouseEvent.getSource();
            if (mouseEvent.getClickCount() == 2) {
              int index = theList.locationToIndex(mouseEvent.getPoint());
              if (index >= 0) {
                currentAsgnIndex = index;
                Assignment temp = curAssignments.get(index);
                Object o = theList.getModel().getElementAt(index);
                curAsName.setText(temp.getName());
                curAsDate.setText(temp.getDuedate().toString());
                if(!curPanel.isVisible()) {
                    pastPanel.setVisible(false);
                    curPanel.setVisible(true);
                }
                System.out.println("Double-clicked on: " + o.toString());
              }
            }
          }
        };
          MouseListener pastMouseListener = new MouseAdapter() {
          public void mouseClicked(MouseEvent mouseEvent) {
            JList theList = (JList) mouseEvent.getSource();
            if (mouseEvent.getClickCount() == 2) {
              int index = theList.locationToIndex(mouseEvent.getPoint());
              if (index >= 0) {
                currentAsgnIndex = index;
                
                /*Assignment temp = pastAssignments.get(index);
                if(getSubmitted(temp) != null) {
                    temp = getSubmitted(temp);
                }
                Object o = theList.getModel().getElementAt(index);
                pastAsName.setText(temp.getName());
                pastAsDueDate.setText(temp.getDuedate().toString());
                pastAsSubDate.setText("Submitted(" + temp.getSubdate() + ")");
                gradeLabel.setText("" + temp.getGrade());*/
                constructPastPanel(index);
                if(!pastPanel.isVisible()) {
                    curPanel.setVisible(false);
                    pastPanel.setVisible(true);
                }
                //System.out.println("Double-clicked on: " + o.toString());
              }
            }
          }
        };
        curList.addMouseListener(curMouseListener);
        pastList.addMouseListener(pastMouseListener);
    }
    
    public void constructPastPanel(int index) {
        Assignment temp = pastAssignments.get(index);
        pastAsName.setText(temp.getName());
        pastAsDueDate.setText(temp.getDuedate().toString());
        Assignment tempSub = getSubmitted(temp);
        if(tempSub != null) {
            pastAsSubDate.setText("Submitted(" + tempSub.getSubdate() + ")");
            downSubBtn.setEnabled(true);
            if(tempSub.getGrade() != -1) {
                gradeLabel.setText("" + tempSub.getGrade());
            }
            else {
                gradeLabel.setText("-");
            }
        }
        else {
            pastAsSubDate.setText("Not Submitted");
            downSubBtn.setEnabled(false);
            gradeLabel.setText("-");
        }
    }
    
    public Assignment getSubmitted(Assignment asgn) {
        
        for( Assignment temp : allSubmissions) {
            if(asgn.equals(temp)) {
                return temp;
            }
        }
        return null;
    }
    public void initCurAssignments() {
        client.sendUTFDataToServer("GET_CUR_ASSIGNMENTS");
        courseCode = (String)courseCombo.getSelectedItem();
        curModel.clear();
        if(courseCode != null) {
            client.sendUTFDataToServer(courseCode);
            System.out.println((String)courseCombo.getSelectedItem());
            curAssignments = (ArrayList<Assignment>) client.getObjectFromServer();
            curAssignmentNames = new ArrayList<String>();

            for(int i = 0; i < curAssignments.size(); i++) {
                curAssignmentNames.add(curAssignments.get(i).getName());
            }

            for(int i = 0; i < curAssignmentNames.size(); i++) {
                curModel.addElement(curAssignmentNames.get(i));
            }
        }
        else {
            client.sendUTFDataToServer("NO_COURSE");
        }
        //curList = new JList(curAssignmentNames.toArray());
        
    }
    
    public void initPastAssignments() {
        client.sendUTFDataToServer("GET_PAST_ASSIGNMENTS");
        courseCode = (String)courseCombo.getSelectedItem();
        pastModel.clear();
        if(courseCode != null) {
            client.sendUTFDataToServer(courseCode);
            pastAssignments = (ArrayList<Assignment>) client.getObjectFromServer();
            allSubmissions = (ArrayList<Assignment>) client.getObjectFromServer();
            pastAssignmentNames = new ArrayList<String>();

            for(int i = 0; i < pastAssignments.size(); i++) {
                pastAssignmentNames.add(pastAssignments.get(i).getName());
            }

            for(int i = 0; i < pastAssignmentNames.size(); i++) {
                pastModel.addElement(pastAssignmentNames.get(i));
            }
        }
        else {
            client.sendUTFDataToServer("NO_COURSE");
        }
        
    }
    
    public void initCourses() {
        client.sendUTFDataToServer("GET_COURSES");
        courseArrList = (ArrayList)client.getObjectFromServer();
        
        courseCombo.setModel(new DefaultComboBoxModel(courseArrList.toArray()));
    }
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseSubPathBtn;
    private javax.swing.JComboBox courseCombo;
    private javax.swing.JLabel curAsDate;
    private javax.swing.JLabel curAsName;
    private javax.swing.JList curList;
    private javax.swing.JPanel curPanel;
    private javax.swing.JButton downAsgnBtn;
    private javax.swing.JButton downAsgnFromSubBtn;
    private javax.swing.JButton downSubBtn;
    private javax.swing.JButton enrollBtn;
    private javax.swing.JLabel gradeLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel pastAsDueDate;
    private javax.swing.JLabel pastAsName;
    private javax.swing.JLabel pastAsSubDate;
    private javax.swing.JList pastList;
    private javax.swing.JPanel pastPanel;
    private javax.swing.JTextField subPathField;
    private javax.swing.JButton submitBtn;
    // End of variables declaration//GEN-END:variables
}
